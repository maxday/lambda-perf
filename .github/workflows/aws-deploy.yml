name: deploy to aws

on:
  workflow_dispatch:
    inputs:
      mfaCode:
        type: string
        description: MFA Code
        required: true
      region:
        description: 'region on which you want to deploy'
        type: choice
        options:
          - eu-west-1
          - us-east-1
        required: true
      lambdaPerfEnv:
        description: 'environment on which you want to deploy'
        type: choice
        options:
          - staging
          - production
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: install dependencies
        run: |
          cd function-deployer && yarn install
          cd ../function-invoker && yarn install
          cd ../function-trigger-invoker && yarn install
          cd ../result-builder && yarn install
          cd ../report-log-processor && yarn install
      - name: install Serverless Framework
        run: sudo yarn global add serverless@^3.27.0 --prefix /usr/local
      - name: deploy
        env:
          AWS_REGION: ${{ inputs.region }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_MFA_ARN: ${{ secrets.AWS_MFA_ARN }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          GH_AUTH_TOKEN: ${{ secrets.GH_AUTH_TOKEN }}
          LAMBDA_PERF_ENV: ${{ inputs.lambdaPerfEnv }}
        run: |
          creds_json=$(aws sts get-session-token --serial-number ${AWS_MFA_ARN} --token-code ${{ inputs.mfaCode }})
          export AWS_ACCESS_KEY_ID=$(echo "$creds_json" | jq .Credentials.AccessKeyId |tr -d '"')
          export AWS_SECRET_ACCESS_KEY=$(echo "$creds_json" | jq .Credentials.SecretAccessKey| tr -d '"')
          export AWS_SESSION_TOKEN=$(echo "$creds_json" | jq .Credentials.SessionToken|tr -d '"')
          sls deploy
